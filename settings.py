"""
Файл с настройками бота, регулировка данного файла позволяет создать своего уникального бота.
"""
from dotenv import load_dotenv
import os

BASE_DIR = os.path.dirname(__file__)
load_dotenv(dotenv_path=os.path.join(BASE_DIR, ".env"))
print(os.getenv("TOKEN"))

class SETTINGS:
    """
    Класс хрянящий все неизменяющиеся переменные.
    
    Список переменных:\n
    [ 
        token, bot_chat_id, def_templ, join_templ, admin_id,
        def_time_work, time_zone, debug, all_templ, active_modules,
        answers, type_time_work, time_work_group, command, 
        list_all_com, prohabilities, templ_and_respons
    ]
    """

    # Токен хранится в виде строки (генерируется в паблике).
    token           = os.getenv("TOKEN")

    # Id паблика бота хранится в виде числа. Пример: 123456789
    bot_chat_id     = os.getenv("BOT_CHAT_ID")

    # Шаблоны слов, на который бот должен всегда давать какой-либо ответ.
    # Лучше всего сюда поставить имя бота.
    def_templ       = [             
        r"бот"
    ]         

    # Шаблон слова или пробела, с помощью которого будет происходить соединение с другими шаблонами.
    # По умолчанию пробел.
    join_templ      = r"\s.*?"      

    # Id администартора бота.
    admin_id        = os.getenv("ADMIN_ID")

    # Значение времени работы бота, которое устанавливатся по умолчанию для всех чатов. 
    # (Не указанных в settings_chat)
    def_time_work   = "ALL"         

    # Временная зона бота, в рамках которой он будет работать по умолчанию.
    # Список доступных временых зон: 
    #   [1] https://gist.github.com/JellyWX/913dfc8b63d45192ad6cb54c829324ee
    time_zone       = "Asia/Tomsk"  

    # Режим отладки включен если True, и отключен если False.
    debug           = True       

    # Набор всех шаблонов, необходимых для ответной реакции ботом, сгрупированных в группы однородных слов.
    all_templ  = {                  
        "приветствие"  : {
            "здравствуй"    : r"здр.вств.й",
            "привет"        : r"пр.в.т",
        },
        "прощание"   : {
            "пока"          : r"п.к.",
            "до свидания"   : r"д.\sсв.д.н.я"
        }
    }

    # Модули дополнения функцианальной возможности бота.
    # Имеется возможность разрабатывать индивидуальные модули , выполненные в определеном формате.
    # (Смотрите пример модуля "flip_and_roll.py")
    active_modules = [               
        "games.flip_and_roll",
        'games.hh'
    ]

    # Набор всех вариантов ответов на конкретные слова, разбитые по редкости. 
    answers    =  {                 
        "по умолчанию" : {
            "common" : [
                "Я бот."
            ],

            "uncommon" : [
                "Я почти бот."
            ],

            "rare" : [
                "Я точно бот."
            ],

            "legendary" : [
                "А может быть это ты бот?."
            ]
        },

        "приветствие" : {

            "здравствуй": {
                "common" : [
                    "Здравствуйте, чем могу помочь?",
                    "Здравствуй друг, чем я мог бы тебе помочь?",
                ]
            },

            "привет" : {
                "common" : [
                    "Привет, чем могу помочь?",
                    "Привет друг, чем я мог бы тебе помочь?",
                ]
            }   
        },

        "прощание" : {
            
            "пока"          : {
                "common" : [
                    "Пока, буду тебя ждать.",
                ],
            },

            "до свидания"   : {
                "common" : [
                    "До свидания, надеюсь я тебе помог.",
                ]
            }
        }
    }

    # Варианты времени работы бота с учетом временной зоны.
    # Парамеры "ALL" и "CUSTOM" должны находиться на 1 и 2 строчках
    # данного списка соотетственно.
    type_time_work = [              
        ("ALL", time_zone),
        ("CUSTOM", time_zone),
        ("NIGHT_MSK", "Europe/Moscow"),
        ("DAY_MSK", "Europe/Moscow"),
    ]

    # Время работы конкретного чата.
    # В себе может содержать минимум 2 парамерта и максимум 4, обязательные два:
    #   time_type - берется из списка type_time_work
    #   included  - включен ли бот или нет
    # Два других:
    #   t_from    - время работы бота с какого-то конкретного часа
    #   t_to      - время работы бота по какой-то конкретный час
    # Чтобы понять как задаются данные параметры, необходимо заглянуть в файл components.chat_settings.
    settings_chat = {            
        123456789 : {
            "time_type" : type_time_work[0],
            "included"  : True
        },

        123456780 : {
            "time_type" : type_time_work[1],
            "from"      : "00:00",
            "to"        : "23:00",
            "included"  : True
        }
    }

    # Список команд вместе с шаблонами слов, на которые бот должен реагировать.
    # Для того, чтобы расширить этот список необходимо вносить правки в файл components.command.py.
    # Публичные команды доступны всем пользователям, приватные - только администатору.
    command  = {                                  
        "public" : {
            "выключить бота"        : [
                r"выкл*\sбот*",
                r"бот\sвыкл*",
            ],

            "включить бота"         : [
                    r"вкл*\sбот*",
                    r"бот\sвкл*",
            ],

            "показать стат группы"  : [
                    r"п.к.жи\sстат",
            ],
        },

        "private" : {
            "помощь" : [
                r"пом.[ш,щ]ь",
                r"h.lp"
            ],

            "показать всю стат"     : [
                r"п.к.жи\sвсю\sстат",
            ],

            "сменить время" : [
                r"см.н.ть\sвремя\s\D{,20}\d{9,10}\sс\s\d{2}:\d{2}\sпо\s\d{2}:\d{2}"
            ],

            "показать id групп" : [
                r"п.к.жи\sid\sгруп."
            ]        
        }
    }     

    # Список всех команд с описанием. 
    # Если не внести новую команду в этот список, она работать не будет.
    list_all_com = [                
        (
            "включить бота", 
            "Команда для выключения бота в чате (Внутри чата)"
        ),

        (
            "выключить бота", 
            "Команда для включения бота в чате (Внутри чата)"
        ),

        (
            "показать стат группы", 
            "Команда показывает какое колличество ответов разного уровня редкости выпало в чате (Внутри чата)"
        ),

        # Для администатора
        (
            "помощь", 
            "Показывает все доступные для работы команды"
        ), 

        (
            "показать всю стат", 
            "Команда показывает какое колличество ответов разного уровня редкости выпало во всех чатах"
        ),

        (
            "сменить время", 
            "Команда позволяет менять время работы бота в группе (По id группы)"
        ),

        (
            "показать id чатов",
            "Команда отображает id чата, где находится бот."
        )
    ]

    # Шанс выпадения ответа бота для каждого из типов редкости
    prohabilities   = {             
        "common" : 0.5,
        "uncommon" : 0.25, 
        "rare" : 0.05, 
        "legendary" : 0.005
    }

    # Список хранящий все отношения между словами из шаблона и ответами. 
    # При внесении новых слов и ответов на них необходимо так же в данном 
    # списке предоставить зависимости
    templ_and_respons = {
        def_templ[0]                              : answers["по умолчанию"],
        all_templ["приветствие"]["здравствуй"]    : answers["приветствие"]["здравствуй"],
        all_templ["приветствие"]["привет"]        : answers["приветствие"]["привет"],
        all_templ["прощание"]["пока"]             : answers["прощание"]["пока"],
        all_templ["прощание"]["до свидания"]      : answers["прощание"]["до свидания"]
    }